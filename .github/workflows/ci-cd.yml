name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    # Add MongoDB service
    services:
      mongodb:
        image: mongo:4.4
        ports:
          - 27017:27017
        options: >-
          --health-cmd "echo 'db.runCommand(\"ping\").ok' | mongo localhost:27017/test --quiet"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Verify MongoDB connection using Docker
      - name: Verify MongoDB connection
        run: |
          docker run --network host mongo:4.4 mongo --host localhost --eval "db.runCommand({ ping: 1 })"

      # Backend setup
      - name: Install backend dependencies
        run: npm install --prefix backend

      # Run backend tests only
      - name: Run backend tests
        run: npm test --prefix backend
        env:
          MONGO_URI: mongodb://localhost:27017/campaignQA_db_test

      # Frontend setup - just to verify it installs correctly
      - name: Install frontend dependencies
        run: npm install --prefix frontend --legacy-peer-deps

      # Skip the UI tests for now - they don't exist yet
      - name: UI Tests Status
        run: echo "Frontend UI tests skipped - test files not created yet"

      # Add this step to show what files actually exist in the tests directory
      - name: List test directories (for debugging)
        run: |
          echo "Available test files:"
          find . -name "*.test.js" || echo "No test files found"
          echo "Available test directories:"
          find . -type d -name "tests" || echo "No test directories found"
